@page "/"
@using Design_A_Bear.Client.Pages.components
@using Design_A_Bear.Models
@using Design_A_Bear.Services
@inject IItemService ItemService
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<PageTitle>Home</PageTitle>

<div class="hero-section mt-2">
    <div class="container-fluid">
        <h1 class="display-4 fw-bold">Design A Bear</h1>
        <p class="lead">Where Your Imagination Hugs Reality</p>
        <a href="/Browse/ShopAll" class="btn btn-primary">Shop all</a>
    </div>
</div>

<h3 class="fw-bold pt-2 fs-1">Shop teddy bears:</h3>
<div class="w-100 overflow-x-scroll pt-2 row">
    @if(!ItemsLoaded)
    {
        <p class="fs-5">loading products...</p>
    }
    else
    {
        @foreach(var item in TeddyBears)
        {
            <div class="col-md-4 col-12" @key="item.Id">
                <ItemCard Item="@item" />
            </div>
        }        
    }
</div>

<h3 class="fw-bold pt-4 fs-1">Shop teddy clothing:</h3>
<div class="w-100 overflow-x-scroll pt-2 row">
    @if (!ItemsLoaded)
    {
        <p class="fs-5">loading products...</p>
    }
    else
    {
        @foreach (var item in Clothing)
        {
            <div class="col-md-4 col-12" @key="item.Id">
                <ItemCard Item="@item" />
            </div>
        }
    }
</div>

@code{
    private List<Item> TeddyBears = new List<Item>();
    private List<Item> Clothing = new List<Item>();

    private bool ItemsLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        var teddyBearTask = ItemService.FetchSpecificAmount(5, "Teddy Bear");
        var clothingTask = ItemService.FetchSpecificAmount(5, "Clothing");

        await Task.WhenAll(teddyBearTask, clothingTask);

        TeddyBears = await teddyBearTask;
        Clothing = await clothingTask;

        ItemsLoaded = true;
    }
}
